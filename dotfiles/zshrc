# History file
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Auto 'cd'
setopt autocd

# TODO: Verify meaning
setopt nomatch
unsetopt extendedglob notify

# Use Vim keybindings
# bindkey -v - Not needed anymove since I run my shell inside Neovim

# Bind Ctrl+R to history search
bindkey '^R' history-incremental-search-backward

# Load prompt theme system
autoload -Uz promptinit
promptinit

# === Customize prompt ===
# Turn on parameter expansion on prompt
setopt PROMPT_SUBST

function get_custom_path {
	p="$(pwd -P)"
	home="$(cd ~ && pwd -P)"
	if [[ "$p" == "$home" ]] ; then
		p="Home"
	elif [[ "$p" == "$home/dev" ]] ; then
		p="Dev"
	elif [[ $p == $home/dev/* ]] ; then
		prefix="$home/dev/"
		p=${p:${#prefix}}
	elif [[ "$p" == "$home/workspace" ]] ; then
		p="Workspace"
	elif [[ $p == $home/workspace/* ]] ; then
		prefix="$home/workspace/"
		p=${p:${#prefix}}
	fi

	echo -n $p
}

function prompt_git {
	git branch >/dev/null 2>/dev/null
	if [[ $? -eq 0 ]];then
		git rev-parse --abbrev-ref HEAD | tr -d '\n'
	else
		echo -n '(None)'
	fi
}

function prompt_path {
	echo -n '%~'
}

function prompt_start {
	echo -n '%K{blue}%F{white} '
}

function prompt_seperate {
	# $1 = Old BG color
	# $2 = New BG color
	# $3 = New text color
	#echo -n ' %f%k%F{'$1'}%K{'$2'}\u25B6 %f%F{'$3'}'
	echo -n ' %f%k%K{'$2'}%f%F{'$3'} '
}

function prompt_terminate {
	echo -n ' %f%k'
}

function set_tmux_title {
	printf "\033k$1\033\\"
}

function set_window_title {
	echo -en "\e]0;$1\a" # Set icon name and window title
}

function prompt_left {
	custom_path=$(get_custom_path)

	prompt_start
	echo -n $custom_path
	prompt_terminate

	echo -n $' > '
}

function prompt_right {
#	prompt_start
#	prompt_git
#	prompt_terminate
}

PROMPT='$(prompt_left)'
#RPROMPT='$(prompt_right)'
# === ===

# Command completion
autoload -Uz compinit
compinit

function isOsx() {
	[[ `uname` == "Darwin" ]]
}

isLinux() {
	[[ `uname` == "Linux" ]]
}

function print_master_branch_name() {
	git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
}

# Aliases
alias vim="nvim"
alias ncdu="ncdu --color dark -rr -x"
if isOsx ; then
	alias ll="ls -lAFhtr"
else
	alias ls='ls --color=auto'
	alias ll="ls -lAFhtr --color"
fi
alias pyll='ll | egrep "(/|.py)$" | egrep -v " (\.|__)"'
alias pyrm='rm -rf **/*.pyc **/.mypy_cache **/__pycache__'
alias rrr='source ~/.zshrc'
alias grep='grep --color=auto'
alias gaa='git add .'
alias gaaa='git add . && git amend'
alias gg='git grep'
alias ggc='gg --color=always'
alias gb='git branch'
alias gbd='git branch -D'
alias gfo='git fetch origin'
alias gcom='git checkout origin/$(print_master_branch_name)'
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias gcl='gfo && gcom'
alias gsa='git stash'
alias gsp='git stash pop'
alias gpo='git push origin'
alias gpof='gpo -f'
alias grom='git rebase origin/$(print_master_branch_name)'
alias grl='gfo && grom'
alias grlp='grl && gpof'

gri() {
	git rebase -i "HEAD~$1"
}
gfc() {
	title="${@:2}"
	git feature create -p "R&D Board" "$title" && git pr "$1"
}
gs() {
	title="${@:2}"
	git commit -m "$title" && git feature create -p "R&D Board" "$title" && git pr "$1"
}
gff() {
	git feature from "$2" && git pr "$1"
}
remenv() {
	ssh -t -i ~/.ssh/forter_id nomenu@prod-rugatka.frdstr.com remove prod $1
}
ct() {
	pytest2 -fxvv --disable-warnings $@
}
oni-install() {
	yarn install --ignore-engines --no-lockfile
}
lerna-install() {
	npx lerna bootstrap -- --ignore-engines --no-lockfile
}

alias deploy='cd ~/dev/forter && make deploy-prod-tx'

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

if isLinux ; then
	# -F - Causes less to automatically exit if the entire file can be displayed on the first screen
	# -X - Disables sending the termcap initialization and deinitialization strings to the terminal (stops less clearing the screen)
	# -R - Accept escape sequences (like colors)
	export LESS="-RFX"
fi

export VISUAL=nvim
export EDITOR="$VISUAL"

export PATH=$PATH:~/.local/npm-global/bin:~/.local/bin
export PATH="/usr/local/bin/:$PATH:$HOME/bin/"

